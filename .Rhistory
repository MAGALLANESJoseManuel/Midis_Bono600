#f <- function(x) format(x, digits = 4, scientific = FALSE)
library(modelsummary)
modelsummary(modelcox,
#fmt=f,
exponentiate = c(F,T),
statistic = 'conf.int',
title = "Regresión Cox",
stars = TRUE,
output = "kableExtra")
confint(rcox1)
confint(rcox1)["tuvoApoyoDinero1",]
confint(rcox1)[1,]
confint(rcox1)[1,]
confint(rcox1)[1,]
coef(rcox1)[1,]
coef(rcox1)
exp(coef(rcox1))
abs(1-exp(coef(rcox1)))
abs(1-exp(coef(rcox1)[1]))
abs(1-exp(coef(rcox1)['tuvoApoyoDinero1']))
abs(1-exp(coef(rcox1)[1]))
abs(1-exp(coef(rcox1)[3]))
abs(1-exp(coef(rcox1)[6]))
(apoyoDinero=abs(1-exp(coef(rcox1)[1])))
`r 100*apoyoDinero`
100*round(apoyoDinero,3)
100*round(apoyoDinero,5)
100*round(apoyoDinero,4)
(carcelantes=abs(1-exp(coef(rcox1)[6])))
100*round(carcelantes,5)
100*round(carcelantes,4)
library(survminer)
ggforest(rcox1, data = carcel)
library(survminer)
ggforest(exp(rcox1), data = carcel)
library(survminer)
ggforest(rcox1, data = carcel)
library(survminer)
ggforest(rcox1, data = carcel,main = "")
library(survminer)
ggforest(rcox1, data = carcel,main = "")
COX_H1= formula(survival~tuvoApoyoDinero+nivelEduca+vecesEnCarcel)
COX_H2= formula(survival~tuvoApoyoDinero+vecesEnCarcel)
#regression
rcox2 <- coxph(COX_H2,data=carcel)
modelcox=list('Riesgo de Re arrestado (I)'=rcox2,'Riesgo de Re arrestado (II)'=rcox1)
#f <- function(x) format(x, digits = 4, scientific = FALSE)
library(modelsummary)
modelsummary(modelcox,
#fmt=f,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Cox (sólo Hazard Ratios)",
stars = TRUE,
output = "kableExtra")
rcox2 <- coxph(COX_H2,data=carcel)
anova(rcox2,rcox1)
COX_H1= formula(survival~tuvoApoyoDinero+nivelEduca+vecesEnCarcel)
COX_H2= formula(survival~tuvoApoyoDinero+vecesEnCarcel)
#regression
rcox2 <- coxph(COX_H2,data=carcel)
modelcox=list('Riesgo de Re arrestado (I)'=rcox2,'Riesgo de Re arrestado (II)'=rcox1)
#f <- function(x) format(x, digits = 4, scientific = FALSE)
library(modelsummary)
modelsummary(modelcox,
#fmt=f,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Cox (sólo Hazard Ratios)",
stars = TRUE,
output = "kableExtra")
anova(rcox2,rcox1)%>%
kable(caption = "Tabla anova para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
knitr::include_url("https://docs.google.com/spreadsheets/d/e/2PACX-1vQSlGaMI8Q8qlXI0Bp3m7BQcEh8ZLzaP7RymVtRYkg3ah1sZVlCi6-HmeKCic1RjfuH3gL_wrbMms88/pubhtml")
link="https://docs.google.com/spreadsheets/d/e/2PACX-1vQSlGaMI8Q8qlXI0Bp3m7BQcEh8ZLzaP7RymVtRYkg3ah1sZVlCi6-HmeKCic1RjfuH3gL_wrbMms88/pub?gid=1573532387&single=true&output=csv"
carcel=read.csv(link, stringsAsFactors = T)
str(carcel)
carcel[,c(2,3,5,6,7,8)]=lapply(carcel[,c(2,3,5,6,7,8)], as.factor)
carcel$nivelEduca=as.ordered(carcel$nivelEduca)
str(carcel)
summary(carcel$semanasLibre)
table(carcel$fueArrestado)
#
h1=formula(semanasLibre~tuvoApoyoDinero+nivelEduca+vecesEnCarcel)
h2=formula(fueArrestado~tuvoApoyoDinero+nivelEduca+vecesEnCarcel)
#
rGauss=lm(h1,data=carcel)
rLogit=glm(h2,data=carcel, family = binomial)
#
models=list('Tiempo en Libertad (Gauss)'=rGauss, "Ser Arrestado (Logit)"=rLogit)
#
library(modelsummary)
modelsummary(models,
title = "Regresiones Gauss y Logit",
stars = TRUE,
output = "kableExtra")
library(survival)
# note que necesito el factor como numérico
carcel$survival=with(carcel,Surv(time = semanasLibre,event =  as.numeric(fueArrestado)))
# que es:
library(magrittr) # needed for pipe %>%
carcel%>%
rmarkdown::paged_table()
library(ggplot2)
library(ggfortify)
#aqui el generico
KM.generico = survfit(survival ~ 1, data = carcel)
###graficando
ejeX='SEMANAS\n curva cae cuando alguien es arrestado'
ejeY='Probabilidad \n(PERMANECER LIBRE)'
titulo="Curva de Sobrevivencia: permanecer libre"
autoplot(KM.generico,xlab=ejeX,ylab=ejeY, main = titulo,conf.int = F)
KM_H1=formula(survival ~ tuvoApoyoDinero)
KM.fondos = survfit(KM_H1, data = carcel)
###
ejeX='SEMANAS\n curva cae cuando alguien es arrestado'
ejeY="Prob ('seguir libre')"
titulo="Curva de Sobrevivencia: ¿Beneficia el apoyo financiero?"
autoplot(KM.fondos,xlab=ejeX,ylab=ejeY,
main = titulo,conf.int = F)  +
labs(colour = "Apoyo Financiero?") +
scale_color_discrete(labels = c("No", "Sí"))
(LogRank=survdiff(KM_H1, data = carcel))
1 - pchisq(LogRank$chisq, length(LogRank$n) - 1)
autoplot(KM.fondos,xlab=ejeX,ylab=ejeY,
main = titulo,conf.int = T)+
labs(colour = "Apoyo Financiero?") +
scale_color_discrete(labels = c("No", "Sí"))
COX_H1= formula(survival~tuvoApoyoDinero+nivelEduca+vecesEnCarcel)
#regression
rcox1 <- coxph(COX_H1,data=carcel)
modelcox=list('Riesgo - Re arrestado'=rcox1,'Riesgo- Re arrestado (exponenciado)'=rcox1)
#f <- function(x) format(x, digits = 4, scientific = FALSE)
library(modelsummary)
modelsummary(modelcox,
#fmt=f,
exponentiate = c(F,T),
statistic = 'conf.int',
title = "Regresión Cox",
stars = TRUE,
output = "kableExtra")
(apoyoDinero=abs(1-exp(coef(rcox1)[1])))
(carcelantes=abs(1-exp(coef(rcox1)[6])))
library(survminer)
ggforest(rcox1, data = carcel,main = "¿Quiénes tienen mayor riesgo de volver a ser encarcelados?")
COX_H1= formula(survival~tuvoApoyoDinero+nivelEduca+vecesEnCarcel)
COX_H2= formula(survival~tuvoApoyoDinero+vecesEnCarcel)
#regression
rcox2 <- coxph(COX_H2,data=carcel)
modelcox=list('Riesgo de Re arrestado (I)'=rcox2,'Riesgo de Re arrestado (II)'=rcox1)
#f <- function(x) format(x, digits = 4, scientific = FALSE)
library(modelsummary)
modelsummary(modelcox,
#fmt=f,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Cox (sólo Hazard Ratios)",
stars = TRUE,
output = "kableExtra")
anova(rcox2,rcox1)%>%
kable(caption = "Tabla anova para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
anova(rcox2,rcox1)%>%
knitr::kable(caption = "Tabla anova para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
knitr::kable(caption = "Tabla anova para comparar modelos")
anova(rcox2,rcox1)%>%
knitr::kable(caption = "Tabla anova para comparar modelos")
LogRank%>%knitr::kable()
LogRank=survdiff(KM_H1, data = carcel)
LogRank%>%knitr::kable()
LogRank
LogRank
LogRank
str(LogRank)
as.data.frame(LogRank)
LogRank
LogRank$obs
LogRank
str(LogRank)
LogRank
str(LogRank)
LogRank$pvalue
library(sf)
library(sf)
link='https://github.com/MAGALLANESJoseManuel/Midis_Bono600/raw/main/midisceplan.geojson'
midis=sf::read_sf(link)
View(midis)
summary(midis)
str(midis)
names(midis)
hist(midis$ejecutado_yana)
View(midis)
summary(midis$ejecutado_yana)
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema)
reg1=glm(h1,offset = log(programado_yana),family = binomial)
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema)
reg1=glm(h1,offset = log(programado_yana),family = binomial,data=midis)
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema)
reg1=glm(h1,offset = log(programado_yana),family = 'binomial',data=midis)
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema)
reg1=glm(h1,offset = log(programado_yana),family = 'poisson',data=midis)
summary(reg1)
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema)
reg1=glm(h1,offset = log(programado_yana),family = 'poisson',data=midis)
summary(reg1)
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema+ejecutado_b600)
reg1=glm(h1,offset = log(programado_yana),family = 'poisson',data=midis)
summary(reg1)
exp(coef(reg1))
midis$b600prop=ejecutado_b600/programado_b600
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema+b600prop)
reg1=glm(h1,offset = log(programado_yana),family = 'poisson',data=midis)
summary(reg1)
exp(coef(reg1))
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema)
reg1=glm(h1,offset = log(programado_yana),family = 'poisson',data=midis)
summary(reg1)
exp(coef(reg1))
library(ggplot2)
base=ggplot(data=midis)
geom_point(aes(x='proporcion_presi','yanaProp'))
library(ggplot2)
base=ggplot(data=midis)
base +geom_point(aes(x='proporcion_presi','yanaProp'))
library(ggplot2)
base=ggplot(data=midis)
base +geom_point(aes(x='proporcion_presi',y='yanaProp'))
library(ggplot2)
base=ggplot(data=midis)
base + geom_point(aes(x='proporcion_presi',y='yanaProp'))
library(ggplot2)
base=ggplot(data=midis,aes(x='proporcion_presi',y='yanaProp'))
base + geom_point()
library(ggplot2)
base=ggplot(data=midis,aes(x='proporcion_presi',y='yanaProp'))
base + geom_point()
plot(midis$proporcion_presi,midis$yanaProp)
library(ggplot2)
base=ggplot(data=midis,aes(x=proporcion_presi,y=yanaProp))
base + geom_point()
library(ggplot2)
base=ggplot(data=midis,aes(x=proporcion_presi,y=yanaProp, color=proporcion_congre))
base + geom_point()
library(ggplot2)
base=ggplot(data=midis,aes(x=proporcion_presi,y=proporcion_congre))
base + geom_point()
library(ggplot2)
base=ggplot(data=midis,aes(x=proporcion_congre,y=yanaProp))
base + geom_point()
library(ggplot2)
base=ggplot(data=midis,aes(x=proporcion_presi,y=yanaProp, color=proporcion_congre))
base + geom_point()
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre)
reg1=glm(h1,offset = log(porcentajePobrezaExtrema),family = 'poisson',data=midis)
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema)
reg1=glm(h1,offset = log(programado_yana),family = 'poisson',data=midis)
summary(reg1)
exp(coef(reg1))
AER::dispersiontest(reg1,alternative='greater')$ p.value<0.05
mean(midis$ejecutado_yana)
sd(midis$ejecutado_yana)
sd(midis$ejecutado_yana)/mean(midis$ejecutado_yana)
h1
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + offset(log(programado_yana)))
rbn=glm.nb(h2,data=midis)
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn),exp=T)# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados") + geom_vline(
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados") + geom_vline(
#     xintercept = 1,
#     colour = "grey60",
#     linetype = 2
# )
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
h2=formula(ejecutado_yana~porcentajePobrezaExtrema + offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + pobDiscapacidad+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
midis$pobDiscapacidad
midis$pobDiscapacidad/midis$pobTotal
midis$propDisca=midis$pobDiscapacidad/midis$pobTotal
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + propDisca+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + propDisca+porcentajeDesnutCrónica5menos+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + propDisca+porcentajeDesnutCrónica5menos+numeroCentrosPoblados+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + porcentajeDesnutCrónica5menos+numeroCentrosPoblados+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + porcentajeDesnutCrónica5menos+numeroCentrosPoblados+b600prop+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + porcentajeDesnutCrónica5menos+numeroCentrosPoblados+b600prop+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
library(ggplot2)
base=ggplot(data=midis,aes(x=b600prop,y=yanaProp))
base + geom_point()
exp(coef(rbn))
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + porcentajeDesnutCrónica5menos+numeroCentrosPoblados+b600prop+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
h2=formula(ejecutado_yana~porcentajePobrezaExtrema + porcentajeDesnutCrónica5menos+numeroCentrosPoblados+b600prop+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + porcentajeDesnutCrónica5menos+numeroCentrosPoblados+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)
summary(rbn)
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + porcentajeDesnutCrónica5menos+numeroCentrosPoblados+b600prop+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis,control=glm.control(maxit=50))
summary(rbn)
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema + porcentajeDesnutCrónica5menos+numeroCentrosPoblados+b600prop+offset(log(programado_yana)))
rbn=MASS::glm.nb(h2,data=midis)#,control=glm.control(maxit=50))
summary(rbn)
rbn=MASS::glm.nb(h2,data=midis),control=glm.control(maxit=50))
rbn=MASS::glm.nb(h2,data=midis,control=glm.control(maxit=50))
summary(rbn)
rbn=MASS::glm.nb(h2,data=midis)#,control=glm.control(maxit=50))
summary(rbn)
rbn=MASS::glm.nb(h2,data=midis,control=glm.control(maxit=50))
summary(rbn)
exp(coef(rbn))
library(ggplot2)
dotwhisker::dwplot(rbn,exp=T)+ geom_vline(
xintercept = 1,
colour = "grey60",
linetype = 2
)
# + scale_y_discrete(labels=c("trabajo\nindependiente","analfabetismo")) + scale_color_discrete(name="Modelos para:\nCantidad de Asegurados")
midis$porcentajePobrezaExtrema*midis$pobTotal
midis$pobres=midis$porcentajePobrezaExtrema*midis$pobTotal
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema)
reg1=glm(h1,offset = log(pobres),family = 'poisson',data=midis)
summary(midis$pobres)
midis$pobres=midis$porcentajePobrezaExtrema*midis$pobTotal
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre)
reg1=glm(h1,offset = log(pobres),family = 'poisson',data=midis)
midis$pobres=midis$porcentajePobrezaExtrema*midis$pobTotal
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre)
reg1=glm(h1,offset = log(pobres),family = 'poisson',data=midis)
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+ porcentajeDesnutCrónica5menos+numeroCentrosPoblados+offset(log(pobres)))
rbn=MASS::glm.nb(h2,data=midis)#,control=glm.control(maxit=50))
na.omit(midis)
na.omit(midis)
rbn=MASS::glm.nb(h2,data=na.omit(midis))#,control=glm.control(maxit=50))
midis$pobres=midis$porcentajePobrezaExtrema*midis$pobTotal
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre)
reg1=glm(h1,offset = log(pobres),family = 'poisson',data=na.omit(midis))
midis$pobres=midis$porcentajePobrezaExtrema*midis$pobTotal/10000
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre)
reg1=glm(h1,offset = log(pobres),family = 'poisson',data=na.omit(midis))
midis$pobres=midis$porcentajePobrezaExtrema*midis$pobTotal/10000
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
str(midis)
str(midis$pobres)
midis$pobres=midis$porcentajePobrezaExtrema*10000
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
str(midis$pobres)
midis$pobres=midis$porcentajePobrezaExtrema*10000
midis$b600prop=midis$ejecutado_b600/midis$programado_b600
str(midis)
library(sf)
link='https://github.com/MAGALLANESJoseManuel/Midis_Bono600/raw/main/midisceplan.geojson'
midis=sf::read_sf(link)
names(midis)
str(midis)
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre)
reg1=glm(h1,offset = log(pobTotal),family = 'poisson',data=na.omit(midis))
summary(reg1)
?rm
?rm
rm(list = ls())
library(sf)
link='https://github.com/MAGALLANESJoseManuel/Midis_Bono600/raw/main/midisceplanmap.geojson'
midis=sf::read_sf(link)
names(midis)
str(midis)
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre)
reg1=glm(h1,offset = log(conteoPobresExtremos),family = 'poisson',data=na.omit(midis))
midis[,c('ejecutado_yana','conteoPobresExtremos')]
rm(list = ls())
library(sf)
link='https://github.com/MAGALLANESJoseManuel/Midis_Bono600/raw/main/midisceplanmap.geojson'
midis=sf::read_sf(link)
names(midis)
str(midis)
midis[,c('ejecutado_yana','conteoPobres')]
h1=formula(ejecutado_yana~proporcion_presi+proporcion_congre+porcentajePobrezaExtrema)
reg1=glm(h1,offset = log(pobTotal),family = 'poisson',data=na.omit(midis))
summary(reg1)
exp(coef(reg1))
AER::dispersiontest(reg1,alternative='greater')$ p.value<0.05
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+ porcentajeDesnutCrónica5menos+numeroCentrosPoblados+offset(log(pobres)))
na.omit(midis)
rbn=MASS::glm.nb(h2,data=na.omit(midis))#,control=glm.control(maxit=50))
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+ porcentajeDesnutCronica5menos+numeroCentrosPoblados+offset(log(pobres)))
na.omit(midis)
rbn=MASS::glm.nb(h2,data=na.omit(midis))#,control=glm.control(maxit=50))
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+ porcentajeDesnutCronica5menos+numeroCentrosPoblados+offset(log(pobTotal)))
na.omit(midis)
rbn=MASS::glm.nb(h2,data=na.omit(midis))#,control=glm.control(maxit=50))
summary(rbn)
#na.omit(midis)
rbn=MASS::glm.nb(h2,data=na.omit(midis))#,control=glm.control(maxit=50))
summary(rbn)
exp(coef(rbn))
h2=formula(ejecutado_yana~proporcion_presi+proporcion_congre+ porcentajeDesnutCronica5menos+numeroCentrosPoblados+offset(log(programado_yana)))
#na.omit(midis)
rbn=MASS::glm.nb(h2,data=na.omit(midis))#,control=glm.control(maxit=50))
summary(rbn)
rm(list = ls())
library(sf)
link='https://github.com/MAGALLANESJoseManuel/Midis_Bono600/raw/main/midisceplanmap_repro.geojson'
midis=sf::read_sf(link)
rm(list = ls())
library(sf)
link='https://github.com/MAGALLANESJoseManuel/Midis_Bono600/raw/main/midisceplanmap_repro.geojson'
midis=sf::read_sf(link)
names(midis)
names(midis)
rm(list = ls())
